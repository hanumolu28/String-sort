{"version":3,"sources":["components/StringSort.js","actions/index.js","components/App.js","reducers/arrayStringManipulations.js","reducers/index.js","index.js"],"names":["StringSort","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","addString","sortedArray","deleteElement","val","changeVal","bind","assertThisInitialized","showSortedTable","evt","preventDefault","setState","document","getElementById","value","ele","console","log","_this2","arrayLength","length","react_default","a","createElement","map","onClick","className","numberOfRows","Math","ceil","numberOfEmptyFields","outputArray","Array","i","row","col","item","values","onSubmit","type","name","id","Component","connect","arrayString","dispatch","newString","removeString","App","components_StringSort","AddorDelElement","array","b","start","end","mid","floor","splice","arrayStringManipulations","arguments","undefined","action","indexOf","stringList","split","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","forEach","_ref2","_callee","str","_context","stop","_x","apply","toConsumableArray","combineReducers","store","createStore","rootReducer","render","react_redux_es","components_App"],"mappings":"kPAKMA,qBAEL,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACZC,UAAYR,EAAKD,MAAMS,UACvBC,YAAcT,EAAKD,MAAMU,YACzBC,cAAgBV,EAAKD,MAAMW,cAC3BC,IAAM,IAEPX,EAAKY,UAAYZ,EAAKY,UAAUC,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACjBA,EAAKQ,UAAYR,EAAKQ,UAAUK,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACjBA,EAAKe,gBAAkBf,EAAKe,gBAAgBF,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACvBA,EAAKU,cAAiBV,EAAKU,cAAcG,KAAnBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAXLA,yEAaRgB,GACLA,EAAIC,iBACFd,KAAKe,SAAS,CAACP,IAAKQ,SAASC,eAAe,YAAYC,QACT,KAA9CF,SAASC,eAAe,YAAYC,OAAclB,KAAKI,MAAMC,UAAUW,SAASC,eAAe,YAAYC,OAC9GF,SAASC,eAAe,YAAYC,MAAQ,yCAEjCC,GACbC,QAAQC,IAAIF,GACZnB,KAAKI,MAAMG,cAAcY,qCAEjBN,8CAGO,IAAAS,EAAAtB,KACbuB,EAAcvB,KAAKJ,MAAMU,YAAYkB,OACzC,GAAkB,GAAfD,EAAkB,OAAQE,EAAAC,EAAAC,cAAA,cACxB,GAAGJ,EAAc,EACrB,OACCE,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAEI3B,KAAKJ,MAAMU,YAAYsB,IAAI,SAAAV,GACzB,OAAQO,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,QAASP,EAAKf,cAAcG,KAAK,KAAMQ,GAAQY,UAAU,UAAUZ,QAWhG,IAJA,IAAIa,EAAeC,KAAKC,KAAKjC,KAAKJ,MAAMU,YAAYkB,OAAO,GACvDU,EAAsBlC,KAAKJ,MAAMU,YAAYkB,OAAO,EACpDW,EAAc,IAAIC,MAAML,GAEpBM,EAAE,EAAGA,EAAIN,EAAcM,IAC9BF,EAAYE,GAAI,IAAID,MAAM,GAI3B,KAAMF,EAAsB,GAA4B,GAAvBA,GAChCC,EAAYJ,EAAa,GAAGG,GAAuB,GACnDA,IAEDd,QAAQC,IAAIc,GAIZ,IAHA,IAAIG,EAAK,EAAEC,EAAK,EAGRF,EAAE,EAAEA,EAAErC,KAAKJ,MAAMU,YAAYkB,OAAOa,IACf,IAAzBF,EAAYG,GAAKC,GACnBF,IAGAF,EAAYG,GAAKC,GAAOvC,KAAKJ,MAAMU,YAAY+B,GAG7CC,GAAQP,EAAa,GACvBO,EAAM,EACNC,KAGAD,IAKF,OACCb,EAAAC,EAAAC,cAAA,aACCQ,EAAYP,IAAI,SAACY,GACjB,OAAQf,EAAAC,EAAAC,cAAA,UACN7B,OAAO2C,OAAOD,GAAMZ,IAAI,SAACT,GACxB,OAAQM,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,QAASP,EAAKf,cAAcG,KAAK,KAAMS,GAAMW,UAAU,UAAUX,2CAcpF,OADFC,QAAQC,IAAIrB,KAAKJ,MAAMU,aAEnBmB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMe,SAAU1C,KAAKK,UAAWyB,UAAU,WACxCL,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,OAAOC,KAAK,cAAcC,GAAG,aACxCpB,EAAAC,EAAAC,cAAA,UAAQgB,KAAK,UAAb,UAGClB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,aAAQ3B,KAAKY,4BAzGCkC,cA6HXC,cAJS,SAAC3C,GAAD,MAAY,CAChCE,YAAcF,EAAM4C,cATG,SAACC,GAAD,MAAe,CACtC5C,UAAW,SAACG,GACRyC,ECtHiB,SAACzC,GAAD,MAAU,CACjCmC,KAAM,aACNO,UAAW1C,GDoHIH,CAAUG,KAEvBD,cAAgB,SAACC,GAChByC,ECrHuB,SAACzC,GAAD,MAAU,CACpCmC,KAAM,aACNO,UAAW1C,GDmHC2C,CAAa3C,OAOZuC,CAA6CpD,GEzH7CyD,EANH,kBACV3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0B,EAAD,uCCmCEC,EAAkB,SAACC,EAAO/C,EAAKgD,GAGjC,IAFH,IAAIC,EAAM,EAAGC,EAAIH,EAAM/B,OAAO,EAEpBiC,GAAOC,GAAK,CACf,IAAIC,EAAI3B,KAAK4B,OAAOH,EAAQC,GAAK,GACjC,GAAIH,EAAMI,KAASnD,EAIlB,YAFGgD,EAAGD,EAAMM,OAAOF,EAAK,EAAGnD,GACrB+C,EAAMM,OAAOF,EAAK,IAGhBJ,EAAMI,GAAOnD,EACjBiD,EAAQE,EAAM,EAEdD,EAAMC,EAAM,EAElBH,GAAID,EAAMM,OAAOJ,EAAO,EAAGjD,IAInBsD,EA1DkB,WAAwB,IAAvB1D,EAAuB2D,UAAAvC,OAAA,QAAAwC,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAvC,OAAA,EAAAuC,UAAA,QAAAC,EACvD,OAAQC,EAAOtB,MACb,IAAK,aAGJ,GAAGsB,EAAOf,UAAUgB,QAAQ,MAAQ,EAAG,CAEzC,IAAIC,EAAaF,EAAOf,UAAUkB,MAAM,MAM7B,eAAAC,EAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,EAAA7C,EAAA8C,KAAG,SAAAC,IAAA,OAAAF,EAAA7C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPV,EAAWW,QAAX,eAAAC,EAAAjF,OAAAwE,EAAA,EAAAxE,CAAAyE,EAAA7C,EAAA8C,KAAoB,SAAAQ,EAAMC,GAAN,OAAAV,EAAA7C,EAAAgD,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,EACnBvB,EAAgBlD,EAAM6E,GAAK,GADR,wBAAAC,EAAAC,SAAAH,EAAAhF,SAApB,gBAAAoF,GAAA,OAAAL,EAAAM,MAAArF,KAAA+D,YAAA,IADO,wBAAAY,EAAAQ,SAAAV,EAAAzE,SAAH,yBAAAqE,EAAAgB,MAAArF,KAAA+D,YAAA,EAKXN,QAGKH,EAAgBlD,EAAM6D,EAAOf,WAAW,GAEzC,OAAOpD,OAAAwF,EAAA,EAAAxF,CAAIM,GAEf,IAAK,aAED,OADHkD,EAAgBlD,EAAM6D,EAAOf,WAAW,GAC9BpD,OAAAwF,EAAA,EAAAxF,CAAIM,GAGd,IAAK,WAEL,QACE,OAAON,OAAAwF,EAAA,EAAAxF,CAAIM,KChCFmF,cAAgB,CAC7BvC,gBCGIwC,EAAQC,YAAYC,GAE1BC,iBACElE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAUJ,MAAOA,GACf/D,EAAAC,EAAAC,cAACkE,EAAD,OAEF7E,SAASC,eAAe","file":"static/js/main.f0dd2405.chunk.js","sourcesContent":["import React, { Component } from 'react';  \nimport { connect } from 'react-redux';\nimport { addString,removeString, getList } from '../actions'\nimport '../styles/main.scss';\n\nclass StringSort  extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taddString : this.props.addString,\n\t\t\tsortedArray:  this.props.sortedArray,\n\t\t\tdeleteElement : this.props.deleteElement,\n\t\t\tval : \"\"\n\t\t};\n\t\tthis.changeVal = this.changeVal.bind(this);\n\t\tthis.addString = this.addString.bind(this);\n\t\tthis.showSortedTable = this.showSortedTable.bind(this);\n\t\tthis.deleteElement =  this.deleteElement.bind(this);\n\t}\n\taddString(evt) {\n      evt.preventDefault();\n        this.setState({val: document.getElementById('strInput').value})\n      if(document.getElementById('strInput').value !== \"\") this.state.addString(document.getElementById('strInput').value);\n      document.getElementById('strInput').value = '';\n  \t}\n  \tdeleteElement(ele) {\n  \t\tconsole.log(ele);\n  \t\tthis.state.deleteElement(ele);\n  \t}\n\tchangeVal (evt) {\n\t\t //\t;\n\t}\n\tshowSortedTable() {\n\t\tlet arrayLength = this.props.sortedArray.length;\n\t\tif(arrayLength == 0) return (<tbody></tbody>);\n\t\telse if(arrayLength < 5) {\n\t\t\treturn (\n\t\t\t\t<tbody><tr> \n\t            {\n\t              this.props.sortedArray.map(value => {\n\t                return (<td><a onClick={this.deleteElement.bind(null, value)} className=\"delStr\">{value}</a></td>)\n\t              })\n\t            } \n            </tr></tbody>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\tlet numberOfRows = Math.ceil(this.props.sortedArray.length/4);\n\t\t\tlet numberOfEmptyFields = this.props.sortedArray.length%4;\n\t\t\tlet outputArray = new Array(numberOfRows);\n\t\t\tlet outputTable = [];\n\t\t\tfor(let i=0; i < numberOfRows; i++ ){\n\t\t\t\toutputArray[i]= new Array(4);\n\n\t\t\t\t\n\t\t\t}\n\t\t\twhile(numberOfEmptyFields < 4 && numberOfEmptyFields != 0) {\n\t\t\t\toutputArray[numberOfRows-1][numberOfEmptyFields] = '';\n\t\t\t\tnumberOfEmptyFields ++;\n\t\t\t}\n\t\t\tconsole.log(outputArray);\n\t\t\tlet row =0,col =0;\n\n\n\t\t\tfor(var i=0;i<this.props.sortedArray.length;i++) {\n\t\t\t\tif(outputArray[row][col] == '') {\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toutputArray[row][col] = this.props.sortedArray[i];\n\t\t\t\t}\n\n\t\t\t\tif(row == (numberOfRows-1)) {\n\t\t\t\t\trow = 0;\n\t\t\t\t\tcol++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow++;\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn(\n\t\t\t <tbody> \n\t\t\t\t{outputArray.map((item) => {\n\t\t\t\t\treturn (<tr>{\n\t\t\t\t\t\t\tObject.values(item).map((ele) => {\n\t\t\t\t\t\t\t\treturn (<td><a onClick={this.deleteElement.bind(null, ele)} className=\"delStr\">{ele}</a></td>)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>)\n\n\t\t\t\t})\n\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t)\n\n\t\t}\n\n\t}\n\trender() {\n\t\tconsole.log(this.props.sortedArray);\n    return (\n      <div>\n        <form onSubmit={this.addString} className='strForm'>\n         \t<input type=\"text\" name=\"strInputVal\" id=\"strInput\"/>\n          \t<button type=\"submit\">\n            \tSubmit\n          \t</button>\n            <p> Output:</p>\n            <table>{this.showSortedTable()}</table>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addString: (val) => {\n        dispatch(addString(val))\n    },\n    deleteElement : (val) => {\n    \tdispatch(removeString(val))\n    }\n})\nconst mapStateToProps = (state) => ({\n    sortedArray : state.arrayString\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StringSort)\n","// Actions\n\nexport const addString = (val) => ({\n  type: 'ADD_STRING',\n  newString: val\n})\nexport const removeString = (val) => ({\n  type: 'DEL_STRING',\n  newString: val\n})\n\nexport const getList = () => ({\n\t type: 'GET_LIST'\n})\n\n\n","import React from 'react'\nimport StringSort from './StringSort'\n\nconst App = () => (\n  <div>\n    <StringSort />\n  </div>\n)\n\nexport default App\n","// Reducer to handle AddString & DelString Actions\n\nconst arrayStringManipulations = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_STRING':{\n    \t // if the Input value is a list of string with comma separeted, then split them and add them to array\n    \t // else just add that element\n    \tif(action.newString.indexOf(',') > -1) {\n\n\t\t\tlet stringList = action.newString.split(\",\");\n\t\t\t/*for(var i=0;i<stringList.length;i++){\n\t\t\t\tif(stringList[i] != \"\") \n\t\t\t\tAddorDelElement(state,stringList[i], true)\n\t\t\t}*/\n\t\t\t// Gotta make this action synchronus.\n\t\t\tconst start = async () => {\n\t\t\t\tawait stringList.forEach( async(str) => {\n\t\t\t\t\tawait AddorDelElement(state,str, true)\n\t\t\t\t});\n\t\t\t}\n\t\t\tstart();\n\t\t}    \n      \telse {\n      \t\tAddorDelElement(state,action.newString, true)\n      \t}\n      \treturn [...state];\n  \t}\n  \tcase 'DEL_STRING' : {\n  \t\tAddorDelElement(state,action.newString, false)\n      \treturn [...state];\n\n  \t}\n    case 'GET_LIST':\n       return [...state];\n    default:\n      return [...state];\n  }\n}\n\n// Binary Search performed in insert or delete element from the Array.\nconst AddorDelElement = (array, val, b) => {\n\tlet start=0, end=array.length-1;\n\n    while (start<=end) { \n        let mid=Math.floor((start + end)/2); \n        if (array[mid] === val) {\n        \t// if B is true add element to Array else delete it\n        \tif(b) array.splice(mid, 0, val);\n        \telse  array.splice(mid, 1);\n        \treturn;\n        }\n        else if (array[mid] < val)  \n             start = mid + 1; \n        else\n             end = mid - 1; \n    } \n    if(b)  array.splice(start, 0, val);   \n    return; \n}\n\nexport default arrayStringManipulations\n","import { combineReducers } from 'redux'\nimport arrayString from './arrayStringManipulations'\n\nexport default combineReducers({\n  arrayString\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}